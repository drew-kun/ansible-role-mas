---
# tasks file for ansible-mas

- name: '[mas] Ensure MAS is installed'
  homebrew: name=mas state=present
  register: mas_istall_result
  until: mas_istall_result is succeeded
  tags: mas

- name: '[mas] Get MAS account status'
  command: /opt/homebrew/bin/mas account
  register: mas_account_result
  failed_when: mas_account_result.rc > 1
  check_mode: false
  changed_when: false
  when: ansible_distribution_version is version('12', '<')
  tags: mas

# Unfortunately having this issue (Hope it will be fixed soon):
# https://github.com/mas-cli/mas/issues/164
- name: '[mas] Sign in to MAS when email and password are provided'
  command: "/opt/homebrew/bin/mas signin {{ mas_email }} {{ mas_password }}"
  register: mas_signin_result
  when:
  - ansible_distribution_version is version('10.13', '<')
  - not mas_signin_dialog
  - mas_account_result.rc == 1  # should be switched to 0 or make an OR statement
  - mas_email != ''
  - mas_password != ''
  tags: mas

- name: '[mas] Sign in to MAS when email is provided, and complete password and 2FA using dialog.'
  command: "/opt/homebrew/bin/mas signin {{ mas_email }} {{ mas_password }} --dialog"
  register: mas_signin_result
  when:
  - ansible_distribution_version is version('10.13', '<')
  - mas_signin_dialog
  - mas_account_result.rc == 1  # should be switched to 0 or make an OR statement
  - mas_email != ''
  tags: mas

- name: '[mas] List installed MAS apps'
  command: /opt/homebrew/bin/mas list
  register: mas_list
  check_mode: no
  changed_when: false
  tags: mas

- name: '[mas] Ensure configured MAS apps are installed'
  command: /opt/homebrew/bin/mas install "{{ item.id|default(item) }}"
  with_items: "{{ mas_installed_apps }}"
  when: (item.id | default(item) | string) not in mas_list.stdout
  tags: mas

# community.general.mas module still cannot find the mas binary installed by brew
#- name: Ensure configured MAS apps are installed.
#  community.general.mas:
#    id: "{{ item.id|default(item) }}"
#    state: present
#  with_items: "{{ mas_installed_apps }}"

- name: '[mas] Upgrade all apps (if configured)'
  command: /opt/homebrew/bin/mas upgrade
  when: mas_upgrade_all_apps
  tags: mas

# Configure AppStore Software update
- name: '[mas] Determine if softwareupdate should install updates'
  set_fact:
    mas_macos_softwareupdate_action: "--install"
  when: mas_softwareupdate.install
  tags: mas

- name: '[mas] Determine if softwareupdate should only download updates'
  set_fact:
    mas_macos_softwareupdate_action: "--download"
  when: not mas_softwareupdate.install
  tags: mas

- name: '[mas] Determine if softwareupdate should install recommended updates only'
  set_fact:
    mas_macos_softwareupdate_updates: "--recommended"
  when: mas_softwareupdate.recommended
  tags: mas

- name: '[mas] Determine if softwareupdate should install all updates'
  set_fact:
    mas_macos_softwareupdate_updates: "--all"
  when: not mas_softwareupdate.recommended
  tags: mas

- name: '[mas] Run assembled command'
  command: "{{ 'softwareupdate ' + mas_macos_softwareupdate_action + ' ' + mas_macos_softwareupdate_updates }}"
  register: softwareupdate_assembled
  changed_when:
  - softwareupdate_assembled.rc != 0
  - not 'No updates are available.' in softwareupdate_assembled.stderr
  tags: mas
